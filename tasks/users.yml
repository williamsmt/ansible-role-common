---
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Create local sudoers group
  group:
    name: "{{ sudo_group }}"
    state: present
  when: sudo_group is defined

- name: Install sudo group template
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ item.path }}/{{ item.file }}"
    mode: '0600'
  with_items:
    - { path: '/etc/sudoers.d', file: 'sudo_group'}
  when: sudo_group is defined

- name: Create local admin accounts
  user:
    name: "{{ item }}"
    shell: /bin/bash
    groups: "{{ sudo_group }}"
    append: yes
    password_lock: yes
    state: present
  with_items: "{{ local_admin }}"
  when: local_admin is defined and sudo_group is defined

- name: Install authorized keys for local admin accounts
  ansible.posix.authorized_key:
    user: "{{ item }}"
    state: present
    key: "{{ local_admin_key_http if local_admin_key_http else lookup('file', local_admin_key_file) }}"
  with_items: "{{ local_admin }}"
  when: local_admin is defined and
        (local_admin_key_http is defined or local_admin_key_file is defined)

- name: Disable root account
  user:
    name: root
    password: '!'
  when: not root_login|bool
...
